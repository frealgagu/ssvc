package co.edu.udistrital.view.configuration;

import co.edu.udistrital.service.ApplicationServices;
import co.edu.udistrital.service.ConfigurationService;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

public class EmailConfigurationDialog extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private NativeButton btnCancel;
	@AutoGenerated
	private NativeButton btnOk;
	@AutoGenerated
	private Label lblEmailConfiguration;
	@AutoGenerated
	private CheckBox checkAuth;
	@AutoGenerated
	private CheckBox checkStartTLS;
	@AutoGenerated
	private TextField txtFrom;
	@AutoGenerated
	private PasswordField txtPassword;
	@AutoGenerated
	private TextField txtUsername;
	@AutoGenerated
	private TextField txtPort;
	@AutoGenerated
	private TextField txtHost;
	@AutoGenerated
	private Label lblAuth;
	@AutoGenerated
	private Label lblStartTLS;
	@AutoGenerated
	private Label lblFrom;
	@AutoGenerated
	private Label lblPassword;
	@AutoGenerated
	private Label lblUsername;
	@AutoGenerated
	private Label lblPort;
	@AutoGenerated
	private Label lblHost;
	private static final long serialVersionUID = 1567612014356481037L;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public EmailConfigurationDialog() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		initialize();
	}
	
	private void initialize() {
		btnOk.addListener(new Button.ClickListener() {
			
            private static final long serialVersionUID = -8577869814107324983L;

			@Override
			public void buttonClick(ClickEvent event) {
				ok();
			}
		});
		btnCancel.addListener(new Button.ClickListener() {
			
            private static final long serialVersionUID = -4972802977202955811L;

			@Override
			public void buttonClick(ClickEvent event) {
				cancel();
			}
		});
		ConfigurationService configurationService = ApplicationServices.getConfigurationService();
		txtHost.setValue(configurationService.getEmailSenderHost());
		txtPort.setValue(configurationService.getEmailSenderPort());
		txtUsername.setValue(configurationService.getEmailSenderUsername());
		txtPassword.setValue(configurationService.getEmailSenderPassword());
		txtFrom.setValue(configurationService.getEmailSenderFrom());
		checkStartTLS.setValue(Boolean.valueOf(configurationService.getEmailSenderStartTLS()));
		checkAuth.setValue(Boolean.valueOf(configurationService.getEmailSenderAuth()));
	}
	
	private void ok() {
		ConfigurationService configurationService = ApplicationServices.getConfigurationService();
		if(txtHost.getValue() != null) {
			configurationService.setEmailSenderHost(String.valueOf(txtHost.getValue()));
		} else {
			configurationService.setEmailSenderHost("");
		}
		if(txtPort.getValue() != null) {
			configurationService.setEmailSenderPort(String.valueOf(txtPort.getValue()));
		} else {
			configurationService.setEmailSenderPort("0");
		}
		if(txtUsername.getValue() != null) {
			configurationService.setEmailSenderUsername(String.valueOf(txtUsername.getValue()));
		} else {
			configurationService.setEmailSenderUsername("");
		}
		if(txtPassword.getValue() != null) {
			configurationService.setEmailSenderPassword(String.valueOf(txtPassword.getValue()));
		} else {
			configurationService.setEmailSenderPassword("");
		}
		if(txtFrom.getValue() != null) {
			configurationService.setEmailSenderFrom(String.valueOf(txtFrom.getValue()));
		} else {
			configurationService.setEmailSenderFrom("");
		}
		if(checkStartTLS.getValue() != null) {
			configurationService.setEmailSenderStartTLS(String.valueOf(checkStartTLS.getValue()));
		} else {
			configurationService.setEmailSenderStartTLS("false");
		}
		if(checkAuth.getValue() != null) {
			configurationService.setEmailSenderAuth(String.valueOf(checkAuth.getValue()));
		} else {
			configurationService.setEmailSenderAuth("false");
		}
		if(getWindow() != null && getWindow().getParent() != null) {
			getWindow().getParent().removeWindow(getWindow());
		}
	}
	
	private void cancel() {
		if(getWindow() != null && getWindow().getParent() != null) {
			getWindow().getParent().removeWindow(getWindow());
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("440px");
		mainLayout.setHeight("340px");
		
		// top-level component properties
		setWidth("440px");
		setHeight("340px");
		
		// lblHost
		lblHost = new Label();
		lblHost.setImmediate(false);
		lblHost.setWidth("160px");
		lblHost.setHeight("25px");
		lblHost.setValue("Servidor:");
		mainLayout.addComponent(lblHost, "top:60.0px;left:20.0px;");
		
		// lblPort
		lblPort = new Label();
		lblPort.setImmediate(false);
		lblPort.setWidth("160px");
		lblPort.setHeight("25px");
		lblPort.setValue("Puerto:");
		mainLayout.addComponent(lblPort, "top:90.0px;left:20.0px;");
		
		// lblUsername
		lblUsername = new Label();
		lblUsername.setImmediate(false);
		lblUsername.setWidth("160px");
		lblUsername.setHeight("25px");
		lblUsername.setValue("Usuario:");
		mainLayout.addComponent(lblUsername, "top:120.0px;left:20.0px;");
		
		// lblPassword
		lblPassword = new Label();
		lblPassword.setImmediate(false);
		lblPassword.setWidth("160px");
		lblPassword.setHeight("25px");
		lblPassword.setValue("Contraseña:");
		mainLayout.addComponent(lblPassword, "top:150.0px;left:20.0px;");
		
		// lblFrom
		lblFrom = new Label();
		lblFrom.setImmediate(false);
		lblFrom.setWidth("160px");
		lblFrom.setHeight("25px");
		lblFrom.setValue("Remitente:");
		mainLayout.addComponent(lblFrom, "top:180.0px;left:20.0px;");
		
		// lblStartTLS
		lblStartTLS = new Label();
		lblStartTLS.setImmediate(false);
		lblStartTLS.setWidth("160px");
		lblStartTLS.setHeight("25px");
		lblStartTLS.setValue("Utilizar STARTTLS:");
		mainLayout.addComponent(lblStartTLS, "top:210.0px;left:20.0px;");
		
		// lblAuth
		lblAuth = new Label();
		lblAuth.setImmediate(false);
		lblAuth.setWidth("160px");
		lblAuth.setHeight("25px");
		lblAuth.setValue("Utilizar AUTH:");
		mainLayout.addComponent(lblAuth, "top:240.0px;left:20.0px;");
		
		// txtHost
		txtHost = new TextField();
		txtHost.setImmediate(false);
		txtHost.setWidth("100.0%");
		txtHost.setHeight("25px");
		mainLayout.addComponent(txtHost,
				"top:60.0px;right:20.0px;left:180.0px;");
		
		// txtPort
		txtPort = new TextField();
		txtPort.setImmediate(false);
		txtPort.setWidth("100.0%");
		txtPort.setHeight("25px");
		mainLayout.addComponent(txtPort,
				"top:90.0px;right:20.0px;left:180.0px;");
		
		// txtUsername
		txtUsername = new TextField();
		txtUsername.setImmediate(false);
		txtUsername.setWidth("100.0%");
		txtUsername.setHeight("25px");
		mainLayout.addComponent(txtUsername,
				"top:120.0px;right:20.0px;left:180.0px;");
		
		// txtPassword
		txtPassword = new PasswordField();
		txtPassword.setImmediate(false);
		txtPassword.setWidth("100.0%");
		txtPassword.setHeight("25px");
		mainLayout.addComponent(txtPassword,
				"top:150.0px;right:20.0px;left:180.0px;");
		
		// txtFrom
		txtFrom = new TextField();
		txtFrom.setImmediate(false);
		txtFrom.setWidth("100.0%");
		txtFrom.setHeight("25px");
		mainLayout.addComponent(txtFrom,
				"top:180.0px;right:20.0px;left:180.0px;");
		
		// checkStartTLS
		checkStartTLS = new CheckBox();
		checkStartTLS.setImmediate(false);
		checkStartTLS.setWidth("100.0%");
		checkStartTLS.setHeight("25px");
		mainLayout.addComponent(checkStartTLS,
				"top:210.0px;right:20.0px;left:180.0px;");
		
		// checkAuth
		checkAuth = new CheckBox();
		checkAuth.setImmediate(false);
		checkAuth.setWidth("100.0%");
		checkAuth.setHeight("25px");
		mainLayout.addComponent(checkAuth,
				"top:240.0px;right:20.0px;left:180.0px;");
		
		// lblEmailConfiguration
		lblEmailConfiguration = new Label();
		lblEmailConfiguration.setImmediate(false);
		lblEmailConfiguration.setWidth("100.0%");
		lblEmailConfiguration.setHeight("20px");
		lblEmailConfiguration
				.setValue("<font size=\"4\"><center><b>Configuración de Correo</b></center>");
		lblEmailConfiguration.setContentMode(3);
		mainLayout.addComponent(lblEmailConfiguration,
				"top:20.0px;right:20.0px;left:20.0px;");
		
		// btnOk
		btnOk = new NativeButton();
		btnOk.setCaption("Aceptar");
		btnOk.setImmediate(true);
		btnOk.setWidth("120px");
		btnOk.setHeight("38px");
		mainLayout.addComponent(btnOk, "top:280.0px;left:80.0px;");
		
		// btnCancel
		btnCancel = new NativeButton();
		btnCancel.setCaption("Cancelar");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("120px");
		btnCancel.setHeight("38px");
		mainLayout.addComponent(btnCancel, "top:282.0px;left:240.0px;");
		
		return mainLayout;
	}


}
