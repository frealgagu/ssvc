package co.edu.udistrital.view.configuration;

import co.edu.udistrital.service.ApplicationServices;
import co.edu.udistrital.service.ConfigurationService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.*;
import com.vaadin.ui.Button.ClickEvent;

public class PLCRegistersConfigurationDialog extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
    private AbsoluteLayout mainLayout;
	@AutoGenerated
    private NativeButton btnCancel;
	@AutoGenerated
    private NativeButton btnOk;
	@AutoGenerated
    private Label lblPLCConfiguration;
    @AutoGenerated
    private TextField txtTemperatureAlarm;
    @AutoGenerated
    private TextField txtPressureAlarm;
    @AutoGenerated
    private TextField txtTemperatureWrite;
    @AutoGenerated
    private TextField txtPressureWrite;
    @AutoGenerated
    private TextField txtTemperatureRead;
    @AutoGenerated
    private TextField txtPressureRead;
    @AutoGenerated
    private Label lblTemperatureAlarm;
    @AutoGenerated
    private Label lblPressureAlarm;
    @AutoGenerated
    private Label lblTemperatureWrite;
    @AutoGenerated
    private Label lblPressureWrite;
    @AutoGenerated
    private Label lblTemperatureRead;
    @AutoGenerated
    private Label lblPressureRead;

	private static final long serialVersionUID = 1567612014356481037L;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PLCRegistersConfigurationDialog() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		initialize();
	}
	
	private void initialize() {
		btnOk.addListener(new Button.ClickListener() {
			
            private static final long serialVersionUID = -8577869814107324983L;

			@Override
			public void buttonClick(ClickEvent event) {
				ok();
			}
		});
		btnCancel.addListener(new Button.ClickListener() {
			
            private static final long serialVersionUID = -4972802977202955811L;

			@Override
			public void buttonClick(ClickEvent event) {
				cancel();
			}
		});
		
		ConfigurationService configurationService = ApplicationServices.getConfigurationService();
        txtPressureRead.setValue(configurationService.getPressureRead());
        txtTemperatureRead.setValue(configurationService.getTemperatureReadRegister());
        txtPressureWrite.setValue(configurationService.getPressureWriteRegister());
        txtTemperatureWrite.setValue(configurationService.getTemperatureWriteRegister());
        txtPressureAlarm.setValue(configurationService.getPressureAlarmRegister());
        txtTemperatureAlarm.setValue(configurationService.getTemperatureAlarmRegister());
	}
	
	private void ok() {
		ConfigurationService configurationService = ApplicationServices.getConfigurationService();
        if(txtPressureRead.getValue() instanceof Integer) {
            configurationService.setPressureRead((Integer)txtPressureRead.getValue());
        } else {
            try {
                configurationService.setPressureRead(Integer.parseInt(String.valueOf(txtPressureRead.getValue())));
            } catch(NumberFormatException ignore) {
                configurationService.setPressureRead(0);
            }
        }
        if(txtTemperatureRead.getValue() instanceof Integer) {
            configurationService.setTemperatureRead((Integer)txtTemperatureRead.getValue());
        } else {
            try {
                configurationService.setTemperatureRead(Integer.parseInt(String.valueOf(txtTemperatureRead.getValue())));
            } catch(NumberFormatException ignore) {
                configurationService.setTemperatureRead(0);
            }
        }
        if(txtPressureWrite.getValue() instanceof Integer) {
            configurationService.setPressureWrite((Integer)txtPressureWrite.getValue());
        } else {
            try {
                configurationService.setPressureWrite(Integer.parseInt(String.valueOf(txtPressureWrite.getValue())));
            } catch(NumberFormatException ignore) {
                configurationService.setPressureWrite(0);
            }
        }
        if(txtTemperatureWrite.getValue() instanceof Integer) {
            configurationService.setTemperatureWrite((Integer)txtTemperatureWrite.getValue());
        } else {
            try {
                configurationService.setTemperatureWrite(Integer.parseInt(String.valueOf(txtTemperatureWrite.getValue())));
            } catch(NumberFormatException ignore) {
                configurationService.setTemperatureWrite(0);
            }
        }
        if(txtPressureAlarm.getValue() instanceof Integer) {
            configurationService.setPressureAlarmRegister((Integer)txtPressureWrite.getValue());
        } else {
            try {
                configurationService.setPressureAlarmRegister(Integer.parseInt(String.valueOf(txtPressureWrite.getValue())));
            } catch(NumberFormatException ignore) {
                configurationService.setPressureAlarmRegister(0);
            }
        }
        if(txtTemperatureAlarm.getValue() instanceof Integer) {
            configurationService.setTemperatureAlarmRegister((Integer)txtTemperatureWrite.getValue());
        } else {
            try {
                configurationService.setTemperatureAlarmRegister(Integer.parseInt(String.valueOf(txtTemperatureWrite.getValue())));
            } catch(NumberFormatException ignore) {
                configurationService.setTemperatureAlarmRegister(0);
            }
        }
		if(getWindow() != null && getWindow().getParent() != null) {
			getWindow().getParent().removeWindow(getWindow());
		}
	}
	
	private void cancel() {
		if(getWindow() != null && getWindow().getParent() != null) {
			getWindow().getParent().removeWindow(getWindow());
		}
	}

	@AutoGenerated
    private AbsoluteLayout buildMainLayout() {
	    // common part: create layout
	    mainLayout = new AbsoluteLayout();
	    mainLayout.setImmediate(false);
	    mainLayout.setWidth("360px");
	    mainLayout.setHeight("310px");
	    
	    // top-level component properties
	    setWidth("360px");
	    setHeight("310px");

        // lblPressureRead
        lblPressureRead = new Label();
        lblPressureRead.setImmediate(false);
        lblPressureRead.setWidth("100%");
        lblPressureRead.setHeight("25px");
        lblPressureRead.setValue("Registro de lectura de <strong>Presi\u00F3n:</strong>");
        lblPressureRead.setContentMode(Label.CONTENT_XHTML);
        mainLayout.addComponent(lblPressureRead, "top:60.0px;left:20.0px;right:70px");

        // lblTemperatureRead
        lblTemperatureRead = new Label();
        lblTemperatureRead.setImmediate(false);
        lblTemperatureRead.setWidth("100%");
        lblTemperatureRead.setHeight("25px");
        lblTemperatureRead.setValue("Registro de lectura de <strong>Temperatura:</strong>");
        lblTemperatureRead.setContentMode(Label.CONTENT_XHTML);
        mainLayout.addComponent(lblTemperatureRead, "top:90.0px;left:20.0px;right:70px");

        // lblPressureWrite
        lblPressureWrite = new Label();
        lblPressureWrite.setImmediate(false);
        lblPressureWrite.setWidth("100%");
        lblPressureWrite.setHeight("25px");
        lblPressureWrite.setValue("Registro de valor deseado de <strong>Presi\u00F3n</strong>:");
        lblPressureWrite.setContentMode(Label.CONTENT_XHTML);
        mainLayout.addComponent(lblPressureWrite, "top:120.0px;left:20.0px;right:70px");

        // lblTemperatureWrite
        lblTemperatureWrite = new Label();
        lblTemperatureWrite.setImmediate(false);
        lblTemperatureWrite.setWidth("100%");
        lblTemperatureWrite.setHeight("25px");
        lblTemperatureWrite.setValue("Registro de valor deseado de <strong>Temperatura:</strong>");
        lblTemperatureWrite.setContentMode(Label.CONTENT_XHTML);
        mainLayout.addComponent(lblTemperatureWrite, "top:150.0px;left:20.0px;right:70px");

        // lblPressureWrite
        lblPressureAlarm = new Label();
        lblPressureAlarm.setImmediate(false);
        lblPressureAlarm.setWidth("100%");
        lblPressureAlarm.setHeight("25px");
        lblPressureAlarm.setValue("Registro de alarma de <strong>Presi\u00F3n:</strong>");
        lblPressureAlarm.setContentMode(Label.CONTENT_XHTML);
        mainLayout.addComponent(lblPressureAlarm, "top:180.0px;left:20.0px;right:70px");

        // lblTemperatureWrite
        lblTemperatureAlarm = new Label();
        lblTemperatureAlarm.setImmediate(false);
        lblTemperatureAlarm.setWidth("100%");
        lblTemperatureAlarm.setHeight("25px");
        lblTemperatureAlarm.setValue("Registro de alarma de <strong>Temperatura:<strong>");
        lblTemperatureAlarm.setContentMode(Label.CONTENT_XHTML);
        mainLayout.addComponent(lblTemperatureAlarm, "top:210.0px;left:20.0px;right:70px");

        // txtPressureRead
        txtPressureRead = new TextField();
        txtPressureRead.setImmediate(false);
        txtPressureRead.setWidth("50px");
        txtPressureRead.setHeight("25px");
        mainLayout.addComponent(txtPressureRead,
                "top:60.0px;right:20.0px");

        // txtTemperatureRead
        txtTemperatureRead = new TextField();
        txtTemperatureRead.setImmediate(false);
        txtTemperatureRead.setWidth("50px");
        txtTemperatureRead.setHeight("25px");
        mainLayout.addComponent(txtTemperatureRead,
                "top:90.0px;right:20.0px");

        // txtPressureWrite
        txtPressureWrite = new TextField();
        txtPressureWrite.setImmediate(false);
        txtPressureWrite.setWidth("50px");
        txtPressureWrite.setHeight("25px");
        mainLayout.addComponent(txtPressureWrite,
                "top:120.0px;right:20.0px");

        // txtTemperatureWrite
        txtTemperatureWrite = new TextField();
        txtTemperatureWrite.setImmediate(false);
        txtTemperatureWrite.setWidth("50px");
        txtTemperatureWrite.setHeight("25px");
        mainLayout.addComponent(txtTemperatureWrite,
                "top:150.0px;right:20.0px");

        // txtPressureWrite
        txtPressureAlarm = new TextField();
        txtPressureAlarm.setImmediate(false);
        txtPressureAlarm.setWidth("50px");
        txtPressureAlarm.setHeight("25px");
        mainLayout.addComponent(txtPressureAlarm,
                "top:180.0px;right:20.0px");

        // txtTemperatureWrite
        txtTemperatureAlarm = new TextField();
        txtTemperatureAlarm.setImmediate(false);
        txtTemperatureAlarm.setWidth("50px");
        txtTemperatureAlarm.setHeight("25px");
        mainLayout.addComponent(txtTemperatureAlarm,
                "top:210.0px;right:20.0px");
	    
	    // lblPLCConfiguration
	    lblPLCConfiguration = new Label();
	    lblPLCConfiguration.setImmediate(false);
	    lblPLCConfiguration.setWidth("100.0%");
	    lblPLCConfiguration.setHeight("20px");
	    lblPLCConfiguration
	            .setValue("<font size=\"4\"><center><b>Configuraci\u00F3n de Registros del PLC</b></center>");
	    lblPLCConfiguration.setContentMode(3);
	    mainLayout.addComponent(lblPLCConfiguration,
	            "top:20.0px;right:20.0px;left:20.0px;");
	    
	    // btnOk
	    btnOk = new NativeButton();
	    btnOk.setCaption("Aceptar");
	    btnOk.setImmediate(true);
	    btnOk.setWidth("120px");
	    btnOk.setHeight("38px");
	    mainLayout.addComponent(btnOk, "top:252.0px;left:40.0px;");
	    
	    // btnCancel
	    btnCancel = new NativeButton();
	    btnCancel.setCaption("Cancelar");
	    btnCancel.setImmediate(true);
	    btnCancel.setWidth("120px");
	    btnCancel.setHeight("38px");
	    mainLayout.addComponent(btnCancel, "top:252.0px;left:200.0px;");
	    
	    return mainLayout;
    }

}
